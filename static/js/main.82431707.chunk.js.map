{"version":3,"sources":["files/pitch.pdf","Progress.js","Footer.js","App.js","serviceWorker.js","index.js","logo.png"],"names":["module","exports","__webpack_require__","p","ListItem","styled","li","_templateObject","Progress","react_default","a","createElement","react_landing_page_dist","heading","Footer","_ref","githubLink","contactLink","dist","is","alignItems","children","href","color","ml","App","zIndex","left","right","top","fontSize","src","logo","width","alt","style","padding","YouTube","videoId","opts","playerVars","autoplay","mute","modestbranding","loop","whitepaper","mt","src_Progress","height","type","data","pitch","src_Footer","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.82431707.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pitch.5f9e1335.pdf\";","import React from 'react';\nimport { Section } from 'react-landing-page';\nimport styled from 'styled-components';\n\nconst ListItem = styled.li`\n  margin: 10px 0;\n  font-weight: 100;\n`;\n\nconst Progress = () => (\n  <Section heading=\"Progress\">\n    <ol>\n      <ListItem>\n        Imagine Hack 2018\n        <ul>\n          <ListItem>\n            <b>Date:</b> 21-22 January, 2018\n          </ListItem>\n          <ListItem>\n            <b>Award:</b> Winner\n          </ListItem>\n          <ListItem>\n            <b>Prize:</b> Surface Pro | 6999 HK$\n          </ListItem>\n        </ul>\n      </ListItem>\n      <ListItem>\n        Bank of China Hackathon\n        <ul>\n          <ListItem>\n            <b>Date:</b> 9-10 March, 2018\n          </ListItem>\n        </ul>\n      </ListItem>\n      <ListItem>\n        Imagine Cup 2018 - Round 2\n        <ul>\n          <ListItem>\n            <b>Date:</b> 26 March, 2018\n          </ListItem>\n        </ul>\n      </ListItem>\n      <ListItem>\n        Imagine Cup 2018 - Elite 10 - Finals\n        <ul>\n          <ListItem>\n            <b>Date:</b> 11 May, 2018\n          </ListItem>\n          <ListItem>\n            <b>Award:</b> Runner-up\n          </ListItem>\n          <ListItem>\n            <b>Award:</b> Most Innovative Award\n          </ListItem>\n          <ListItem>\n            <b>Prize:</b> 2000 HK$\n          </ListItem>\n        </ul>\n      </ListItem>\n      <ListItem>\n        Cyberport Creative Micro Fund 2018\n        <ul>\n          <ListItem>\n            <b>Date:</b> 18 May, 2018\n          </ListItem>\n          <ListItem>\n            <b>Seed Fund: </b>\n            100,000 HK$\n          </ListItem>\n        </ul>\n      </ListItem>\n    </ol>\n  </Section>\n);\n\nexport default Progress;\n","import React from 'react';\nimport { NavLink, Flex, Small } from 'rebass';\n\nconst Footer = ({ githubLink, contactLink }) => (\n  <Flex is=\"footer\" alignItems=\"center\" p={3}>\n    <NavLink children=\"GitHub\" href={githubLink} />\n    <NavLink\n      children=\"Cyberport Creative Micro Fund\"\n      href=\"https://www.cyberport.hk/en/about_cyberport/cyberport_youth/cyberport_creative_micro_fund\"\n    />\n    <NavLink children=\"Contact\" href={contactLink} />\n    <Small color=\"grey\" ml=\"auto\">\n      Â© Credit Sense, 2018\n    </Small>\n  </Flex>\n);\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { Provider, Heading, Text, NavLink, Absolute, Flex } from 'rebass';\nimport {\n  Hero,\n  CallToAction,\n  ScrollDownIndicator,\n  Section\n} from 'react-landing-page';\nimport logo from './logo.png';\nimport whitepaper from './files/pitch.pdf';\nimport pitch from './files/pitch.pdf';\nimport YouTube from 'react-youtube';\nimport Progress from './Progress';\nimport Footer from './Footer';\n\nclass App extends Component {\n  render() {\n    const opts = {\n      playerVars: {\n        // https://developers.google.com/youtube/player_parameters\n        autoplay: 1,\n        mute: 1,\n        modestbranding: 1,\n        loop: 1\n      }\n    };\n\n    const githubLink = 'https://github.com/piy0999/CreditSense';\n    const contactLink = 'mailto:piy0999@connect.hku.hk';\n\n    return (\n      <Provider>\n        <Hero>\n          <Absolute zIndex={1} left={0} right={0} top={0}>\n            <Flex is=\"header\" p={3}>\n              <NavLink href=\"/\" fontSize={3}>\n                Credit Sense\n              </NavLink>\n              <NavLink children=\"GitHub\" href={githubLink} ml=\"auto\" />\n              <NavLink children=\"Contact\" href={contactLink} />\n            </Flex>\n          </Absolute>\n          <img src={logo} width={50} alt={'Credit Sense Logo'} />\n          <Heading>Credit Sense</Heading>\n          <Text fontSize={3}>\n            Inter-bank Credit Scoring platform powered by Blockchain and Machine\n            Learning\n          </Text>\n          <div style={{ padding: '10px' }}>\n            <YouTube videoId=\"ov2LHC7JzPA\" opts={opts} />\n          </div>\n          <CallToAction href={whitepaper} mt={3}>\n            White Paper\n          </CallToAction>\n          <ScrollDownIndicator />\n        </Hero>\n        <Section heading=\"What is Credit Sense?\">\n          <Text fontSize={3}>\n            A decentralised credit scoring service based on blockchain which\n            employs deep learning to calculate an intelligent credit score based\n            on the credit history, delinquencies and 73 other parameters which\n            are usually accounted while calculating a comprehensive credit\n            score.\n          </Text>\n        </Section>\n        <Progress />\n        <Section heading=\"Pitch\">\n          <object width=\"600\" height=\"500\" type=\"application/pdf\" data={pitch}>\n            <p>Pitch cannot be displayed due to incompatible browser.</p>\n          </object>\n        </Section>\n        <Footer githubLink={githubLink} contactLink={contactLink} />\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.f2779b84.png\";"],"sourceRoot":""}